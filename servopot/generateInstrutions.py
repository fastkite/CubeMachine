from getkey import getkey, keys
import time

from datetime import datetime

now = datetime.now()


startTime = None
stopped = True
stoppedStartTime = None

spmStartTime = None
spmCount = 0

spmCalculate = 5

def getSpm(startTime, endTime, count):
    spmSeconds = (endTime - startTime).total_seconds()
    if spmSeconds > 0:
        spm = count / (spmSeconds / 60)
        return spm, spmSeconds
    else:
        return 0, 0 # no spm just stop it

def getWait(startTime,endTime):
    waitSecnods = (endTime - startTime).total_seconds()
    return waitSecnods

while True:


    key = getkey()

    now = datetime.now()
    if startTime != None:
        nowSeconds = (now - startTime).total_seconds()
    else:
        nowSeconds = None


    if key == keys.DOWN:
        # STOP DEEP
        if nowSeconds != None:

            if stopped == True:
                waitTime = getWait (stoppedStartTime,now)
                print ('{"action": "wait", "time": ',waitTime,'},')

            elif spmCount >= 1:
                retSpm, retSeconds = getSpm(spmStartTime, now, spmCount)
                print('{"action": "do", "spm": ', retSpm, '},')
                print('{"action": "wait", "time": ', retSeconds, '},')
                # print("SPM RATE:", retSpm, " FOR SECONDS:", retSeconds)

            print('{"action": "do", "speed": 2},')
            print('{"action": "angle", "degree": 180 - 30},')
            print('{"action": "do", "speed": 0},')


            #print ("STOP DEEP", nowSeconds)

            stoppedStartTime = now
            stopped = True


        spmStartTime = None
        spmCount = 0

    elif key == keys.UP:
        # STOP SHALLOW
        if nowSeconds != None:

            if stopped == True:
                waitTime = getWait(stoppedStartTime, now)
                print('{"action": "wait", "time": ', waitTime, '},')

            elif spmCount >= 1:
                retSpm, retSeconds = getSpm(spmStartTime, now, spmCount)
                print('{"action": "do", "spm": ', retSpm, '},')
                print('{"action": "wait", "time": ', retSeconds, '},')
                # print("SPM RATE:", retSpm, " FOR SECONDS:", retSeconds)

            print('{"action": "do", "speed": 2},')
            print('{"action": "angle", "degree": 360-30},')
            print('{"action": "do", "speed": 0},')

            #print ("STOP SHALLOW", nowSeconds)
            stoppedStartTime = now
            stopped = True


            spmStartTime = None
            spmCount = 0


    elif key == keys.RIGHT:
        # STROKE PER MINUTE
        if nowSeconds != None:
            if stopped == True:
                if stopped == True:
                    waitTime = getWait(stoppedStartTime, now)
                    print('{"action": "wait", "time": ', waitTime, '},')
                stoppedStartTime = None
                stopped = False
                spmStartTime = now
                spmCount = 0
                #print("START SPM", nowSeconds)
            else:
                spmCount = spmCount + 1
                #print ("SPM TICK", spmCount, nowSeconds)
                if spmCount >= spmCalculate:
                    retSpm,retSeconds = getSpm(spmStartTime,now,spmCount)

                    print ('{"action": "do", "spm": ',retSpm,'},')
                    print ('{"action": "wait", "time": ', retSeconds, '},')

                    #print ("SPM RATE:",retSpm," FOR SECONDS:",retSeconds)
                    spmStartTime = now
                    spmCount = 0
            pass

    elif key == 'e':
        # END
        if nowSeconds != None:

            if stopped == True:
                if stopped == True:
                    waitTime = getWait(stoppedStartTime, now)
                    print('{"action": "wait", "time": ', waitTime, '}')
                stoppedStartTime = None
                stopped = False
                spmStartTime = now
                spmCount = 0
                #print("START SPM", nowSeconds)
            else:

                retSpm, retSeconds = getSpm(spmStartTime, now, spmCount)

                print('{"action": "do", "spm": ', retSpm, '},')
                print('{"action": "wait", "time": ', retSeconds, '},')
                print('{"action": "do", "speed": 0}')
            print(']})')

            startTime = None
            print("END INSTRUTIONS", nowSeconds)

    elif key == 's':
        # START
        startTime = datetime.now()
        stoppedStartTime = startTime
        print("START INSTRUTIONS")
        print ('databaseOfModes.append({"name":"AutoGenerated",')
        print ('"instructions":[')

